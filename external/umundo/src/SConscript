import os
Import('env')

isShared = False

cppflags = [
'-DBUILD_RELEASE',
#'-O3',
#'-DNDEBUG',
'-Wall',
'-Wno-attributes',
'-Wno-uninitialized',
'-Wno-narrowing',
'-Wno-unused-local-typedefs',
'-fno-strict-aliasing',
'-Wno-unused-value',
'-Wno-unused-function',
'-Wno-sign-compare',

'-O0', '-g', '-gdwarf-2'
]

if isShared:
    cppflags.extend(['-DCOMPILING_DLL', '-Dumundocore_EXPORTS'])
else:
    cppflags.extend(['-DUMUNDO_STATIC'])

pathBoost   = os.environ["BOOST_DIR"];
cppflags.extend(['-isystem', pathBoost  + '/include']);

env.Append(CPPPATH = ['#/external/umundo/src',
                      '#/external/umundo/src/include_linux',
                      '#/external/umundo/fastlz',
                      '#/external/umundo/zeromq-4.1.0/include',
                      '#/external/umundo/mDNSResponder-333.10/mDNSCore',
                      '#/external/umundo/mDNSResponder-333.10/mDNSPosix',
                      '#/external/umundo/mDNSResponder-333.10/mDNSShared',
                      '#/external/umundo/re-0.4.7/include'])

env.Append(CPPFLAGS = cppflags)

coreFiles = ['Message.cpp',
             'Debug.cpp',
             'Error.cpp',
             'UUID.cpp',
             'Host.cpp',
             'Factory.cpp',
             'portability.cpp',
             'connection/Publisher.cpp',
             'connection/Node.cpp',
             'connection/Subscriber.cpp',
             'discovery/Discovery.cpp',
             'thread/tinythread.cpp',
             'thread/Thread.cpp',
             'connection/zeromq/ZeroMQSubscriber.cpp',
             'connection/zeromq/ZeroMQNode.cpp',
             'connection/zeromq/ZeroMQPublisher.cpp',
             'connection/rtp/RTPPublisher.cpp',
             'connection/rtp/RTPThread.cpp',
             'connection/rtp/RTPSubscriber.cpp',
             'discovery/MDNSDiscovery.cpp',
             'discovery/mdns/bonjour/BonjourDiscoverer.cpp',
             'discovery/BroadcastDiscovery.cpp',
             'discovery/mdns/bonjour/mDNSEmbedded.c'
]

fastlzFiles = '#/external/umundo/fastlz/fastlz.c'

objs = []
if isShared:
    for f in coreFiles:
        objs.append(env.SharedObject('umundo/core/' + f))
    objs.append(env.SharedObject(fastlzFiles))
    coreLib = env.SharedLibrary('#/lib/' + env['target'] + '/libumundocore64', objs)
else:
    for f in coreFiles:
        objs.append(env.StaticObject('umundo/core/' + f))
    objs.append(env.StaticObject(fastlzFiles))
    coreLib = env.StaticLibrary('#/lib/' + env['target'] + '/libumundocore64', objs)

Default(coreLib)
